---
include:
  - docassemble.AssemblyLine:assembly_line.yml
---
metadata:
  title: >-
    Health record 
  short title: >-
    Health record 
  description: |-
    Health record 
  tags: []
  authors:
    - Stavros Constantinou
  allowed_courts: []
  typical_role: "unknown"
  al_weaver_version: "1.10.2"
  generated_on: "2024-01-28"
---
features:
  css: style.css
---
objects:
  - al_logo: DAStaticFile.using(filename="LSV_bug.png")
---
images:
  big_logo: LSV_logo.png 
---
objects:
  - all_courts: ALCourtLoader.using(file_name='courts_list.xlsx')
---
code: |
  trial_court = all_courts.as_court('trial_court', trial_court_index)
  trial_court.geolocate()  
---
code: |
  trial_court = all_courts.as_court('trial_court', trial_court_index)
  trial_court.geolocate()  
---
reconsider: True
code: |
  al_menu_items_tmp = [
    {"url": url_ask(['al_start_over_confirmation','al_start_over']),
    "label": "Start over"
    },
    {
      "url": url_ask(['al_exit_logout_confirmation', 'al_exit_logout']),
      "label": "Exit and delete my answers"
    },
  ]
  if al_enable_incomplete_downloads:
    al_menu_items_tmp.append({
        "url": url_action('al_error_action_download_screen'), 
        "label": "Download current progress"
    })
  
  # Answer set feature is behind a server-wide configuration option
  if get_config('assembly line',{}).get('enable answer sets'):
    al_menu_items_tmp.extend([
    {"url": url_ask(["al_sessions_snapshot_label", {"recompute": ["al_sessions_save_session_snapshot"]}, "al_sessions_save_status"]),
    "label": "Save answer set"
    },
    action_menu_item("Load answer set", "al_load_saved_session"),
  ]
  )
  
  if get_config('assembly line',{}).get('enable answer set imports'):
    al_menu_items_tmp.append(
      {"url": url_ask(["al_sessions_json_file", {"recompute": ["al_sessions_import_json"]}, "al_sessions_load_status"]),
      "label": "Import answer set"
      }
    )
  al_menu_items_tmp.append(
    {
      "url": url_action('edit_answers_screen'),
      "label": "Edit your answers"
      
    }
  )
    
  al_menu_items = al_menu_items_tmp
  del al_menu_items_tmp
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "VT"
---
code: |
  github_repo_name =  'docassemble-HealthRecordCivilUnion'
---
code: |
  interview_short_title = "Get a Health record civil union"
---
code: |
  al_form_type = "other" 
---
objects:
  - users: ALPeopleList.using(ask_number=True,target_number=1)
  - users[i].attorneys: ALPeopleList.using(ask_number=True,target_number=1)
  - other_parties: ALPeopleList.using(ask_number=True,target_number=1)
  - users: ALPeopleList
---
sections:
  - review_Health_record_civil_union: Review your answers

---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_Health_record
code: |
  # Set the allowed courts for this interview
  allowed_courts = []
  nav.set_section("review_Health_record_civil_union")
  
  user_role = "plaintiff"
  user_ask_role = "plaintiff"
  
    
    
  set_parts(subtitle=str(users))
  set_progress(16)
    
  separation_date
  minor_children_number  
 
  decree_date
  type_of_decree
  decree_county
  legal_grounds
    
  court_manager
  signature_date
  docket_number
  set_progress(32)
  
  
    
  other_parties[0].birthdate
    
  set_progress(48)
  
  
  
  interview_order_Health_record = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
#mandatory: True
code: |
  al_intro_screen
  interview_order_Health_record
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  Health_record_civil_union_download
---

    
---
id: basic questions intro screen
decoration: form-lineal
question: |
  **${interview_short_title} in Vermont**
subquestion: |  
  <div class="border-around-text">
  <p>Welcome to ${ AL_ORGANIZATION_TITLE}.</p>
  
  <p>${ AL_ORGANIZATION_TITLE } can help you complete and download forms in 3 steps:</p>
  <ul><li><b>Step 1:</b> Answer questions that will fill in court forms for you.</li>
  <li><b>Step 2:</b> Preview the completed forms.</li>
  <li><b>Step 3:</b> Download, save or print the final forms. You will need to mail, email, efile or deliver them to the court on your own.</li></ul>
  </div>  

  VTCourtForms interviews were created by Legal Services Vermont with support from the Legal Services Corporation. It is free to use this program. This site is not a lawyer. Visit our [VTLawHelp.org website](https://vtlawhelp.org/roadmap/divorce/step-1) for more information about divorce, separation and civil union dissolution.
  
  [FILE big_logo, 30%, Legal Services Vermont logo]

fields:
  - To continue, please accept our [terms of use](https://vtlawhelp.org/vtcourtforms/terms-of-use).: acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.        
continue button field: al_intro_screen
---
id: jurisdiction kickout
question: |
  Stop
subquestion: |
  <i class="fas fa-hand-paper fa-3x" aria-hidden="true"></i> **Stop.** In this situation, these are **not** the right forms to fill out. **Do not use this interview.**
  
  Contact a lawyer or legal aid organization in the state where you live.
  
  If neither of you live in Vermont, a Vermont family court will only take your divorce case if **all these four things are true**:
  
  1. You got married or got a civil union in Vermont
  2. You and your spouse currently live in states where you can't get a divorce or dissolve your civil union
  3. You don't have minor children (under 18), and
  4. You and your spouse already have an agreement about how to deal with your property and debts.
  
  See the [Divorce Roadmap on the VTLawHelp.org website](https://vtlawhelp.org/roadmap/divorce/step-1) to find out what is required for you to be able to file for a divorce, separation or civil union dissolution in Vermont.
continue button field: jurisdiction_kickout
buttons:
  - Exit: exit
    url: https://vtlawhelp.org
---
id: plaintiff VT 6 months
question: |
  See if this interview is right for your situation
subquestion: |
  Have you lived in Vermont since ${ today().minus(months=6) }?
fields:
  - no label: plaintiff_VT
    datatype: yesnoradio
  - Date you moved to Vermont: date_plaintiff_moved_to_VT
    datatype: date
    show if: plaintiff_VT
validation code: |
  if plaintiff_VT and date_plaintiff_moved_to_VT >= today().minus(months=6):
    validation_error("To get a divorce in Vermont, this date needs to be 6 months ago or more.", field="date_plaintiff_moved_to_VT")    
---
id: defendant VT 6 months
question: |
  See if this interview is right for your situation
subquestion: |
  Has your spouse lived in Vermont since ${ today().minus(months=6) }?
fields:
  - no label: defendant_VT
    datatype: yesnoradio
  - Date they moved to Vermont: date_defendant_moved_to_VT
    datatype: date  
    show if: defendant_VT
validation code: |
  if defendant_VT and date_defendant_moved_to_VT >= today().minus(months=6):
    validation_error("To get a divorce in Vermont, this date needs to be 6 months ago or more.", field="date_defendant_moved_to_VT")
#---
#id: marriage_or_civil_union_VT
#question: |
#  See if this interview is right for your situation
#subquestion: |
#  Did you and your spouse get your marriage or civil union in Vermont?
#fields:
#  - no label: marriage_or_civil_union_VT
#    datatype: radio
#    choices: 
#      - Marriage: marriage
#      - Civil Union: civil union
---
id: users_info
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question:  |
  Information about you
fields:
  - code: |
      users[0].name_fields()
  - Maiden Surname: users[0].name_former
    required: False
  - Sex: users[0].sex
      
---
id: users_info_marriage
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question:  |
  Information about you
fields:
  - code: |
      users[0].name_fields()
  - Maiden Surname: users[0].name_former
    required: False
  - Sex: users[0].gender
    datatype: radio
    choices: 
      - Male: male
      - Female: female
---
id: other_parties_info
sets:
    - other_parties[0].name.first
    - other_parties[0].name.last
    - other_parties[0].name.middle
    - other_parties[0].name.suffix
question:  |
  Information about the other party
fields:
  - code: |
      other_parties[0].name_fields()
  - Maiden Surname: other_parties[0].name_former
    required: False
  - Sex: other_parties[0].sex
---
id: other_parties_info_marriage
sets:
    - other_parties[0].name.first
    - other_parties[0].name.last
    - other_parties[0].name.middle
    - other_parties[0].name.suffix
question:  |
  Information about the other party
fields:
  - code: |
      other_parties[0].name_fields()
  - Maiden Surname: other_parties[0].name_former
    required: False
  - Gender: other_parties[0].gender
    input type: radio
    choices:
      - Male: male
      - Female: female

---
id: Users1 birthday
question: |
  What is your date of birth?
fields:
  - "Birthdate": users[0].birthdate
    datatype: BirthDate
--- 
id: Other party birthday
question: | 
  When is the birthdate of ${other_parties[0].name}
fields:
  - "Birthdate": other_parties[0].birthdate
    datatype: BirthDate
---
id: civil_union
question: |
  Information about the civil union
fields:
  - "Civil Union State": civil_union_state
    code: |
      states_list()
    default: VT
  - "Civil Union City": civil_union_city
  - Civil Union Date: civil_union_date
    datatype: date
---
id: separation
question: |
  Information about the separation
fields:
  - "Date couple last resided in same household": separation_date
    datatype: date
  - "As of the specified date, how many children under the age of 18 were in the household?": minor_children_number
    datatype: integer
---
id: attorneys_information
question: |
  Information about your attorney
fields:
  - "Do you have an attorney": no_attorney_involved
    datatype: yesnoradio
    
  - "Attorney's first name": users[0].attorneys[0].name.first
    required: True
    show if: no_attorney_involved
    
  - "Attorney's last name": users[0].attorneys[0].name.last
    required: True
    show if: no_attorney_involved
    
  - "Attorney's middle name": users[0].attorneys[0].name.middle
    required: False
    show if: no_attorney_involved
    
  - "Attorney's suffix": users[0].attorneys[0].name.suffix
    required: False
    show if: no_attorney_involved
    
  - "Street Address": users[0].attorneys[0].address.address
    required: True
    show if: no_attorney_involved
    
  - "City": users[0].attorneys[0].address.city
    required: True
    show if: no_attorney_involved
    
  - "State": users[0].attorneys[0].address.state
    code: |
      states_list()
    default: VT
    required: True
    show if: no_attorney_involved
 
  - "Zip": users[0].attorneys[0].address.zip
    required: True
    show if: no_attorney_involved
    
  - "Attorney's phone number": users1_attorneys_phone_numer
    datatype: al_international_phone
    show if: no_attorney_involved
    
#---
#id: Filltext1a
#question: |
#  Filltext1a
#fields:
#  - "Filltext1a": FillText1a
#    maxlength: 19
---
id: decree
question: |
  What date did this decree become final
fields: 
  - Date: decree_date
    datatype: date
---
id: type_of_decree
question: |
  What was the type of decree
fields:
  - no label: type_of_decree
    input type: radio
    choices:
      - Absolute Dissolution: type1
      - Annulment: type2
---
id: marriage
question: |
  Information about the marriage
fields:
  - "Marriage State": marriage_state
    code: |
      states_list()
    default: VT
  - "Marriage City": marriage_city
  - Marriage Date: marriage_date
    datatype: date
---
id: other_parties_husband_wife_spouse
question: |
  Information about ${ other_parties[0].name }
fields:
  - "Is ${ other_parties[0].name } the": other_parties_role
    input type: radio
    choices: 
      - "Husband": husband
      - "Wife": wife
      - "Spouse": spouse
---
id: users_husband_wife_spouse
question: |
  Information about you
fields:
  - "Are you the": users_role
    input type: radio
    choices: 
      - "Husband": husband
      - "Wife": wife
      - "Spouse": spouse
  
---
id: decree_county
question: |
  What county is the decree in
fields:
  - County: decree_county
    code: all_courts._load_courts()['address_county'].items()
---
id: legal_grounds
question: |
  Information about the decree
fields:
  - "What were the legal grounds for the decree": legal_grounds
    datatype: area
  - "Who was the court manager": court_manager
    maxlength: 54
  - "When was the decree signed": signature_date
    datatype: date
  
---
id: preview Health_record_civil_union
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_Health_record_civil_union'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: Health_record_civil_union_preview_question    
---
code: |
  signature_fields = []
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
id: Health record 
event: review_Health_record_civil_union
question: |
  Review your answers
review:
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
#  - Edit: FillText1a
#    button: |
#      **Filltext1a**:
#      ${ FillText1a }
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor

  - Edit: other_parties.revisit
    button: |
      **Other parties**

      % for item in other_parties:
        * ${ item }
      % endfor
  - Edit: minor_children_number
    button: |
      **Minor children number**:
      ${ minor_children_number }
  - Edit: type1
    button: |
      **Type1**:
      ${ type1 }
  - Edit: type2
    button: |
      **Type2**:
      ${ type2 }
  - Edit: decree_date
    button: |
      **decree_date**:
      ${ decree_date }
  - Edit: decree_county
    button: |
      **decree_county**:
      ${ decree_county }
  - Edit: legal_grounds
    button: |
      **legal_grounds**:
      ${ legal_grounds }
  - Edit: court_manager
    button: |
      **court_manager**:
      ${ court_manager }
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.city") else ""
edit:
  - name.first
  - address.city
confirm: True
---
continue button field: other_parties.revisit
question: |
  Edit other_parties
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.city") else ""
edit:
  - name.first
  - address.city
confirm: True

---
id: download Health_record_civil_union
event: Health_record_civil_union_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_Health_record_civil_union'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
#objects:
#  - al_user_bundle: ALDocumentBundle.using(elements=[Health_record_civil_union_attachment, Health_record_divorce_annulment_attachment],filename="Health_record_civil_union", title="All forms to download for your records", enabled=True)
#  - al_court_bundle: ALDocumentBundle.using(elements=[Health_record_civil_union_attachment, Health_record_divorce_annulment_attachment],  filename="Health_record_civil_union", title="All forms to deliver to court", enabled=True)

