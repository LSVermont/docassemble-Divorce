---
include:
  - docassemble.AssemblyLine:assembly_line.yml
---
metadata:
  title: >-
    Health record civil union
  short title: >-
    Health record civil union
  description: |-
    Health record civil union
  tags: []
  authors:
    - Stavros Constantinou
  allowed_courts: []
  typical_role: "unknown"
  al_weaver_version: "1.10.2"
  generated_on: "2024-01-28"
---
features:
  css: style.css
---
objects:
  - al_logo: DAStaticFile.using(filename="LSV_bug.png")
---
images:
  big_logo: LSV_logo.png 
---
objects:
  - all_courts: ALCourtLoader.using(file_name='courts_list.xlsx')
---
code: |
  trial_court = all_courts.as_court('trial_court', trial_court_index)
  trial_court.geolocate()  
---
code: |
  trial_court = all_courts.as_court('trial_court', trial_court_index)
  trial_court.geolocate()  
---
reconsider: True
code: |
  al_menu_items_tmp = [
    {"url": url_ask(['al_start_over_confirmation','al_start_over']),
    "label": "Start over"
    },
    {
      "url": url_ask(['al_exit_logout_confirmation', 'al_exit_logout']),
      "label": "Exit and delete my answers"
    },
  ]
  if al_enable_incomplete_downloads:
    al_menu_items_tmp.append({
        "url": url_action('al_error_action_download_screen'), 
        "label": "Download current progress"
    })
  
  # Answer set feature is behind a server-wide configuration option
  if get_config('assembly line',{}).get('enable answer sets'):
    al_menu_items_tmp.extend([
    {"url": url_ask(["al_sessions_snapshot_label", {"recompute": ["al_sessions_save_session_snapshot"]}, "al_sessions_save_status"]),
    "label": "Save answer set"
    },
    action_menu_item("Load answer set", "al_load_saved_session"),
  ]
  )
  
  if get_config('assembly line',{}).get('enable answer set imports'):
    al_menu_items_tmp.append(
      {"url": url_ask(["al_sessions_json_file", {"recompute": ["al_sessions_import_json"]}, "al_sessions_load_status"]),
      "label": "Import answer set"
      }
    )
  al_menu_items_tmp.append(
    {
      "url": url_action('edit_answers_screen'),
      "label": "Edit your answers"
      
    }
  )
    
  al_menu_items = al_menu_items_tmp
  del al_menu_items_tmp
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "VT"
---
code: |
  github_repo_name =  'docassemble-HealthRecordCivilUnion'
---
code: |
  interview_short_title = "Get a Health record civil union"
---
code: |
  al_form_type = "other" 
---
objects:
  - users: ALPeopleList.using(ask_number=True,target_number=1)
  - users[i].attorneys: ALPeopleList.using(ask_number=True,target_number=1)
  - other_parties: ALPeopleList.using(ask_number=True,target_number=1)
  - users: ALPeopleList
---
sections:
  - review_Health_record_civil_union: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_Health_record_civil_union
code: |
  # Set the allowed courts for this interview
  allowed_courts = []
  nav.set_section("review_Health_record_civil_union")
  
  user_role = "plaintiff"
  user_ask_role = "plaintiff"
  
  users.gather()
  set_parts(subtitle=str(users))
  set_progress(16)
  civil_union_state
  separation_date
  minor_children_number
  FillText1a
  docket_number
  set_progress(32)

  users[0].address.address
  other_parties.gather()
  set_progress(48)
  other_parties[0].address.address
  
  users[0].attorneys[0].address.address
  interview_order_Health_record_civil_union = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  interview_order_Health_record_civil_union
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  Health_record_civil_union_download
---
id: basic questions intro screen
decoration: form-lineal
question: |
  **${interview_short_title} in Vermont**
subquestion: |  
  <div class="border-around-text">
  <p>Welcome to ${ AL_ORGANIZATION_TITLE}.</p>
  
  <p>${ AL_ORGANIZATION_TITLE } can help you complete and download forms in 3 steps:</p>
  <ul><li><b>Step 1:</b> Answer questions that will fill in court forms for you.</li>
  <li><b>Step 2:</b> Preview the completed forms.</li>
  <li><b>Step 3:</b> Download, save or print the final forms. You will need to mail, email, efile or deliver them to the court on your own.</li></ul>
  </div>  

  VTCourtForms interviews were created by Legal Services Vermont with support from the Legal Services Corporation. It is free to use this program. This site is not a lawyer. Visit our [VTLawHelp.org website](https://vtlawhelp.org/roadmap/divorce/step-1) for more information about divorce, separation and civil union dissolution.
  
  [FILE big_logo, 30%, Legal Services Vermont logo]

fields:
  - To continue, please accept our [terms of use](https://vtlawhelp.org/vtcourtforms/terms-of-use).: acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.        
continue button field: al_intro_screen
---
id: users_info
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question:  |
  Information about you
fields:
  - code: |
      users[0].name_fields()
  - Maiden Surname: users[0].name_former
    required: False
  - Sex: users[0].sex
      
---
id: users_name
sets:
    - other_parties[0].name.first
    - other_parties[0].name.last
    - other_parties[0].name.middle
    - other_parties[0].name.suffix
question:  |
  Information about the other party
fields:
  - code: |
      other_parties[0].name_fields()
  - Maiden Surname: other_parties[0].name_former
    required: False
  - Sex: other_parties[0].sex
---
#  - "Type1": type1
#    input type: radio
#    choices:
#      - 1: 1
#  - "Type2": type2
#    input type: radio
#    choices:
#      - 1: 1
#---
id: Users1 birthday
question: |
  When is your birthday
fields:
  - "Birthdate": users[0].birthdate
    datatype: BirthDate
--- 
id: Other party birthday
question: | 
  When is the birthdate of ${other_parties[0].name}
fields:
  - "Birthdate": other_parties[0].birthdate
    datatype: BirthDate
---
id: civil_union
question: |
  Information about the civil union
fields:
  - "Civil Union State": civil_union_state
    code: |
      states_list()
    default: VT
  - "Civil Union City": civil_union_city
  - Civil Union Date: civil_union_date
    datatype: date
---
id: separation
question: |
  Information about the separation
fields:
  - "Date couple last resided in same household": separation_date
    datatype: date
  - "As of the specified date, how many children under the age of 18 were in the household?": minor_children_number
    datatype: integer
---
id: attorneys_information
sets:
  - users[i].attorneys[j].name.first
  - users[i].attorneys[j].name.last
  - users[i].attorneys[j].name.middle
  - users[i].attorneys[j].name.suffix
  - users[i].attorneys[j].address
  
question: |
  Information about your attorney
fields:
  - code: |
      users[i].attorneys[j].name_fields()
  - code: |
      users[i].attorneys[j].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
id: Filltext1a
question: |
  Filltext1a
fields:
  - "Filltext1a": FillText1a
    maxlength: 19
---
id: decree
question: |
  What date did this decree become final
fields: 
  - Date: decree_date
    datatype: date
---
id: type_of_decree
question: |
  What was the type of decree
fields:
  - no label: label
    input type: radio
    choices:
      - Absolute Dissolution: type1
      - Annulment: type2
---
id: decree_county
question: |
  What county is the decree in
fields:
  - County: decree_county
---
id: legal_grounds
question: |
  Information about the decree
fields:
  - "What were the legal grounds for the decree": legal_grounds
    datatype: area
  - "Who was the court manager": court_manager
    maxlength: 54
  - "When was the decree signed": signature_date
    datatype: date
  
---
id: preview Health_record_civil_union
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_Health_record_civil_union'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: Health_record_civil_union_preview_question    
---
code: |
  signature_fields = []
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
id: Health record civil union review screen
event: review_Health_record_civil_union
question: |
  Review your answers
review:
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: FillText1a
    button: |
      **Filltext1a**:
      ${ FillText1a }
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor

  - Edit: other_parties.revisit
    button: |
      **Other parties**

      % for item in other_parties:
        * ${ item }
      % endfor
  - Edit: minor_children_number
    button: |
      **Minor children number**:
      ${ minor_children_number }
  - Edit: type1
    button: |
      **Type1**:
      ${ type1 }
  - Edit: type2
    button: |
      **Type2**:
      ${ type2 }
  - Edit: decree_date
    button: |
      **decree_date**:
      ${ decree_date }
  - Edit: decree_county
    button: |
      **decree_county**:
      ${ decree_county }
  - Edit: legal_grounds
    button: |
      **legal_grounds**:
      ${ legal_grounds }
  - Edit: court_manager
    button: |
      **court_manager**:
      ${ court_manager }
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.city") else ""
edit:
  - name.first
  - address.city
confirm: True
---
continue button field: other_parties.revisit
question: |
  Edit other_parties
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.city") else ""
edit:
  - name.first
  - address.city
confirm: True

---
id: download Health_record_civil_union
event: Health_record_civil_union_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_Health_record_civil_union'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  #- Health_record_civil_union_Post_interview_instructions: ALDocument.using(title="Instructions", filename="Health_record_civil_union_next_steps.docx", enabled=True, has_addendum=False)
  - Health_record_civil_union_attachment: ALDocument.using(title="Health record civil union", filename="Health_record_civil_union", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[Health_record_civil_union_attachment], filename="Health_record_civil_union", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[Health_record_civil_union_attachment],  filename="Health_record_civil_union", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
#attachment:
#  name: Post-interview-Instructions
#  filename: Health_record_civil_union_next_steps
#  docx template file: Health_record_civil_union_next_steps.docx
#  variable name: Health_record_civil_union_Post_interview_instructions[i]
#  skip undefined: True
#  tagged pdf: True
---
attachment:
  name: Health record civil union
  filename: Health_record_civil_union
  variable name: Health_record_civil_union_attachment[i]
  skip undefined: True
  pdf template file: Health_record_civil_union.pdf
  fields:
      - "docket_number": ${ docket_number }
      - "FillText1a": ${ FillText1a }
      - "users1_name": ${ users[0] }
      - "users1_former_name": ${ users[0].name_former }
      - "users1_sex": ${ users[0].sex }
      - "users1_birth_month": ${ format_date(users[0].birthdate, format='M') }
      - "users1_birth_day": ${ format_date(users[0].birthdate, format='dd') }
      - "users1_birth_year": ${ format_date(users[0].birthdate, format='yyyy') }
      - "users1_address_state": ${ users[0].address.state }
      - "users1_address_city": ${ users[0].address.city }
      - "other_parties1_name": ${ other_parties[0].name }
      - "other_parties1_sex": ${ other_parties[0].sex }
      - "users1_attorneys_address": ${ users[0].attorneys[0].address }
      - "users1_attorneys_name": ${users[0].attorneys[0].name}
      - "other_parties1_former_name": ${ other_parties[0].name_former }
      - "other_parties1_birth_month": ${ other_parties[0].birth_month }
      - "other_parties1_birth_day": ${ other_parties[0].birth_day }
      - "other_parties1_birth_year": ${ other_parties[0].birth_year }
      - "other_parties1_address_state": ${ other_parties[0].address.state }
      - "other_parties1_address_city": ${ other_parties[0].address.city }
      - "civil_union_state": ${ civil_union_state }
      - "civil_union_city": ${ civil_union_city }
      - "civil_union_date": ${ civil_union_date }
      - "minor_children_number": ${ minor_children_number }
      - "type1": ${ type1 }
      - "type2": ${ type2 }
      - "decree_date_month": ${ format_date(decree_date, format='M') }
      - "decree_date": ${ format_date(decree_date, format='dd') }
      - "decree_date_year": ${ format_date(decree_date, format='yyyy') }
      - "decree_county": ${ decree_county }
      - "signature_date_month": ${ format_date(signature_date, format='M') }
      - "signature_date": ${  format_date(signature_date, format='dd') }
      - "signature_date_year": ${ format_date(signature_date, format='yyyy') }
      - "legal_grounds": ${ legal_grounds }
      - "court_manager": ${ court_manager }



